<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mikel Cantero</title>
    <link>http://example.org/</link>
    <description>Recent content on Mikel Cantero</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <lastBuildDate>Fri, 24 Mar 2023 15:31:09 -0600</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sobre mí</title>
      <link>http://example.org/about/</link>
      <pubDate>Sat, 25 Mar 2023 11:10:35 -0600</pubDate>
      
      <guid>http://example.org/about/</guid>
      <description>¡Hola! Soy Mikel Cantero, un ingeniero de software con más de 4 años de experiencia en el desarrollo web. He trabajado en proyectos tanto pequeños como grandes, en los cuales he usado distintos lenguajes de programación PHP, JavaScript, Python, Bash entre otros. Sin embargo, PHP y JavaScript son en los que me siento más cómodo.
También tengo conocimientos en distintas herramientas y tecnologías tales como: HTML, CSS, Sphinx Search Engine, Google Cloud, Administración de servidores, Bases de datos relacionales (especialmente MySQL y MariaDB), Web Scraping, Progresive Web App, AMP y demás.</description>
    </item>
    
    <item>
      <title>Ventajas de la Programación Orientada a Objetos</title>
      <link>http://example.org/posts/ventajas-de-la-programacion-orientada-a-objetos/</link>
      <pubDate>Fri, 24 Mar 2023 15:31:09 -0600</pubDate>
      
      <guid>http://example.org/posts/ventajas-de-la-programacion-orientada-a-objetos/</guid>
      <description>En la actualidad la Programación Orientada a Objetos se ha vuelto una especie de estandar en la industria. En este post veremos brevemente las principales 4 razones detrás de esto:
La encapsulación  Link to heading   La encapsulación es uno de los cuatro conceptos fundamentales de la programación orientada a objetos (POO). Se refiere a la técnica de ocultar la complejidad interna de un objeto, permitiendo que sólo se acceda a él a través de una interfaz pública, que está formada por los métodos y propiedades que el objeto expone para su uso por parte de otros objetos.</description>
    </item>
    
  </channel>
</rss>
