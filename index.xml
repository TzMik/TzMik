<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mikel Cantero</title>
    <link>http://example.org/</link>
    <description>Recent content on Mikel Cantero</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <lastBuildDate>Thu, 30 Mar 2023 17:24:01 -0600</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Recordando conceptos de la POO</title>
      <link>http://example.org/posts/recordando-conceptos-de-la-poo/</link>
      <pubDate>Thu, 30 Mar 2023 17:24:01 -0600</pubDate>
      
      <guid>http://example.org/posts/recordando-conceptos-de-la-poo/</guid>
      <description>La programación orientada a objetos (POO) es un paradigma de programación que se centra en el uso de objetos para representar entidades del mundo real y sus interacciones. En POO, los objetos son instancias de una clase, que es una plantilla que define las propiedades y comportamientos del objeto. En este contexto, existen algunos términos importantes que se utilizan con frecuencia y que me gustaría recordar, como el constructor, destructor, static y constantes.</description>
    </item>
    
    <item>
      <title>Como ejecutar un comando en segundo plano en un servidor Ubuntu</title>
      <link>http://example.org/posts/como-ejecutar-comandos-en-segundo-plano-en-ubuntu/</link>
      <pubDate>Mon, 27 Mar 2023 17:20:00 -0600</pubDate>
      
      <guid>http://example.org/posts/como-ejecutar-comandos-en-segundo-plano-en-ubuntu/</guid>
      <description>Si deseas ejecutar un script en segundo plano en un servidor de forma que se siga ejecutando después de que te desconectes, puedes utilizar el comando nohup y redirigir la salida estándar y de error a un archivo.
Además, para asegurarte de que el proceso se siga ejecutando después de que te desconectes del servidor, puedes usar el comando disown. Esto separa el proceso del shell que lo inició y lo hace independiente de la sesión del usuario.</description>
    </item>
    
    <item>
      <title>Sobre mí</title>
      <link>http://example.org/about/</link>
      <pubDate>Sat, 25 Mar 2023 11:10:35 -0600</pubDate>
      
      <guid>http://example.org/about/</guid>
      <description>¡Hola! Soy Mikel Cantero, un ingeniero de software con más de 4 años de experiencia en el desarrollo web. He trabajado en proyectos tanto pequeños como grandes, en los cuales he usado distintos lenguajes de programación PHP, JavaScript, Python, Bash entre otros. Sin embargo, PHP y JavaScript son en los que me siento más cómodo.
También tengo conocimientos en distintas herramientas y tecnologías tales como: HTML, CSS, Sphinx Search Engine, Google Cloud, Administración de servidores, Bases de datos relacionales (especialmente MySQL y MariaDB), Web Scraping, Progresive Web App, AMP y demás.</description>
    </item>
    
    <item>
      <title>Ventajas de la Programación Orientada a Objetos</title>
      <link>http://example.org/posts/ventajas-de-la-programacion-orientada-a-objetos/</link>
      <pubDate>Fri, 24 Mar 2023 15:31:09 -0600</pubDate>
      
      <guid>http://example.org/posts/ventajas-de-la-programacion-orientada-a-objetos/</guid>
      <description>En la actualidad la Programación Orientada a Objetos se ha vuelto una especie de estandar en la industria. En este post veremos brevemente las principales 4 razones detrás de esto:
La encapsulación  Link to heading   La encapsulación es uno de los cuatro conceptos fundamentales de la programación orientada a objetos (POO). Se refiere a la técnica de ocultar la complejidad interna de un objeto, permitiendo que sólo se acceda a él a través de una interfaz pública, que está formada por los métodos y propiedades que el objeto expone para su uso por parte de otros objetos.</description>
    </item>
    
  </channel>
</rss>
